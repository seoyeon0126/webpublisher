●●자바 스크립트 소개●●

* 자바스크립트 (javascript) : 동적인 웹 페이지를 작성하기 위하여
사용되는 언어 
* 웹의 표준 프로그래밍 언어
* 모든 웹브라우저들은 자바스크립트를 지원.

●HTML5 기술의 핵심

HTML - 웹페이지의 내용
CSS - 웹페이지의 표현
J.S - 웹페이지의 동작 (JAVASCRIPT)

●자바 vs 자바 스크립트
특징	자바 언어			자바스크립트
언어 종류	소스 파일을 컴파일하여 실행하는	브라우저가 소스 코드를 직접 해석하여
	컴파일 언어이다.		실행하는 인터프리트 언어이다.
실행 방식	자바 가상 기계 위에서 실행한다.	브라우저 위에서 실행된다.
작성 위치	별도의 소스 파일에 작성		HTML 파일 안에 삽입 가능 
변수 선언	변수의 타입을 반드시 선언해야 함	변수의 타입을 선언하지 않아도 사용 가능

●자바 스크립트 특징

* 인터프리트 언어
* 동적 타이핑(dynamic typing) - 281페이지
* 구조적 프로그래밍 지원
* 객체 기반
* 함수형 프로그래밍 지원 - 317페이지
* 프로토타입-기반(prototype-based) - 338페이지

<!DOCTYPE html>
<html lang="ko">
<head>
<title>My First Javascript</title>
<meta charset="utf-8">
</head>
<body>

<script>
var now = newData();
document.write(now);
</script>		

<!-- <script>는 head도 써줄수 있고, body에도 써줄 수 있다. 
반면, <table>을 쓸때는 읽은순서대로 인식을 하기 때문에, <script)를 body에 써주는게 좋다 -->

</body>
</html>

●자바 스크립트의 용도

* 이벤트에 반응하는 동작을 구현
* AJAX
* HTML 요소들의 크기나 색상을 동적으로 변경 (ex)This is Healing -- e.color...
* 게임이나 애니메이션 (ex)숫자맞추기
* 사용자가 입력한 값들을 검증 (ex)곱셈계산기, 덧셈계산기, 구구단표

●자바 스크립트의 위치

* 내부 자바스크립트 v <!-- 코딩을 처음 접할 경우 내부로 많이 쓰인다. -->
* 외부 자바스크립트 v
* 인라인 자바스크립트

●내부 자바 스크립트 ( "Hello World!" ) 

<!DOCTYPE html>
<html lang="ko">
<head>
<title>Hello World</title>
<meta charset="utf-8">

<script>
document.write("Hello World!");
</script>

</head>
<body>
</body>
</html>

<!-- 창을 열면 Hello World! 라는 문구가 뜬다 -->

●자바스크립트 주석처리

* 자바스크립트 선언문 안에서 실행문이 아닌 설명글을 적고 싶을 때는
주석 처리 하면 됩니다.
* 한 줄 주석의 경우 // //	(ex) //  자바스크립트 실행문이 들어간다 // , // 자바스크립트
* 여러 줄 주석의 경우 /* */  (ex) /* 여러줄의 주석의 경우에는 이렇게 처리합니다. */

●문장

* 자바스크립트 문장(statement)들은 웹 브라우저에게 내리는 명령

1. 문서에 "Hello World!"를 추가하시오.	document.write("Hello World!");
2. 화면에 경고창을 띄우시오. *alert : 경고창	alert("warning!!");
3. 변수를 하나 만드시오.	 *var : 변수	var count;
4. ...				...

●변수●

* 변수(variable)는 데이터를 저장하는 상자
* var 키워드를 사용하여서 선언(declare)한다.

(ex)
var x; 
<!-- var 키워드는 변수가 선언된다는 것을 나타낸다 
x 는 변수 이름이다. 스크립트 안에서 유일해야 한다.
; 세미콜론은 하나의 문장이 끝났음을 나타낸다. -->

■ 변수선언
* 기본형 var 변수명; 또는 var 변수명=값; // var x=100; 	
// var x; 
■ 변수 이름을 짓는 규칙 (280페이지) // (ex) 클래스명은 숫자로 시작하면 안되는 원리와 같음
* 변수 이름은 문자로 시작해야 한다. (숫자로 시작하면 안된다)
* 변수 이름은 $이나 _로 시작할 수 있다.
* 변수 이름은 대소문자를 구별한다.

■ 예제(1)
변수를 하나 선언 하고 문자열을 할당한 후에
alert()를 사용하여 변수의 값을 출력하여 보자 // alert 는 경고창 이라는 의미를 지님 //

<script>

var x;
x = "Hello World!"; 
alert(x);

(ex) 만약에 alert 가아닌 write 를 쓴다면
경고창이 아니라 창을 열었을때 내가 변수 안에 설정한 값이 표시된다.

</script>
 
● 자료형

* 수치형(number)
* 문자열(string)
* 부울형(boolean) // 참 과 거짓 이라는 형태이다. <!-- false , true -->
* 객체형(object)
* undefined // 표시하지 않겠다. 활성화를 더이상 안하겠다는 의미 (Null)

● 문자형데이터

* 문자형데이터는 문자 나 숫자 를 
큰 따옴표("")또는 작은따옴표('')로 감싸준다.

var 변수명 = "사용할 문자나 숫자";
(ex) x = 100 (숫자) ,  x = "100" (문자)	// var x = 100; , var x = "100"; 
					var x = Number ("100");
● 숫자형 데이터

* 숫자형(Number)데이터는 변수에 저장된 데이터가 
숫자만 들어가야 합니다.
만일 숫자가 들어갈 "100"과 같이 큰 따옴표가 감싸고 있다면
숫자가 아닌 문자형 데이터라 볼 수 있습니다. 

* 이 경우에는 Number("100")를 이용하면 문자형 데이터를
숫자형 데이터로 바꿀 수 있습니다.

var 변수명 = 숫자, 또는 Number("숫자");
(ex) var 변수명 = 100, 또는 Number("100");

■ 자료형 예제(1)

<script>
var s;	// 변수를 (s) 로 정의함

s = 100;	// 변수 (s) 안에 100; 을 설정하겠다는 의미.
document.write(s+"<br>");	// *document.write : 문서에 추가해주세요

/* 문서 안에 (s)변수 인 100을 넣겠다 
<br>을 쓰는 이유는 한문장 띄우기를 하기 위해서 쓰임 */

s = "홍길동";	// 변수 (s) 안에 홍길동 을 설정하겠다는 의미. 
document.write(s+"<br>"); // 문서 안에 (s)변수 인 홍길동 을 넣겠다
</script>

● 자료형의 출력(typeof)

typeof : 지정한 데이터 또는 변수에 저장된 데이터형을
알고 싶을 때 사용합니다.

변수의 타입		출력하는 값
수치형(Number)	Number
문자열(String)	string
부울형(Boolean)	boolean
호출이 가능한 객체	object
호출이 불가능한 객체	function
Null		object
Undefined	Undefined

■ 자료형 예제(1)

<script>

var s;

s = 100;
document.write(s + "<br>");
document.write(typeof s +"<br>");

s="홍길동";
document.write(s + "<br>");
document.write(typeof s +"<br>");  // 다른변수를 주기위해 사용되는게 typeof 

</script>

// typeof 를 씀으로써 출력하는 값 이 숫자형인지 , 문자형인지 알려주는 기능을 한다.

(ex) 
100	// document.write(s + "<br>");
number	// document.write(typeof s + "<br>");
홍길동	// document.write(s + "<br>");
string	// document.write(typeof s + "<br>");
